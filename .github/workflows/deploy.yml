name: Build, Push, and Deploy React Portfolio

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t karlmabs/karl-portfolio:latest .
          docker tag karlmabs/karl-portfolio:latest karlmabs/karl-portfolio:${{ github.sha }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push karlmabs/karl-portfolio:latest
          docker push karlmabs/karl-portfolio:${{ github.sha }}

      - name: Ensure Image is Available
        run: |
          sleep 30  # Allow time for Docker push
          docker pull karlmabs/karl-portfolio:${{ github.sha }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Authenticate with Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Update or Create Deployment
        run: |
          if kubectl --kubeconfig=kubeconfig get deployment karl-portfolio; then
            kubectl --kubeconfig=kubeconfig set image deployment/karl-portfolio karl-portfolio=karlmabs/karl-portfolio:${{ github.sha }} --record
          else
            kubectl --kubeconfig=kubeconfig apply -f k8s/deployment.yaml
          fi

      - name: Restart Deployment
        run: |
          kubectl --kubeconfig=kubeconfig rollout restart deployment/karl-portfolio

      - name: Apply Kubernetes Configurations
        run: |
          kubectl --kubeconfig=kubeconfig apply -f k8s/deployment.yaml
          kubectl --kubeconfig=kubeconfig apply -f k8s/service.yaml

      - name: Verify Deployment
        run: |
          kubectl --kubeconfig=kubeconfig rollout status deployment karl-portfolio
          kubectl --kubeconfig=kubeconfig get pods
