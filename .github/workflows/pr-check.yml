name: PR Quality Check

on:
  pull_request:
    branches: [ main ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Check build size
      run: |
        echo "📦 Build Size Analysis:"
        du -sh dist/
        find dist/ -name "*.js" -o -name "*.css" | xargs ls -lh

    - name: Security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

  docker-build-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (test only)
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: false
        tags: karl-portfolio:pr-${{ github.event.number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Run the container and test if it starts properly
        docker run -d --name test-container -p 3000:3000 karl-portfolio:pr-${{ github.event.number }}
        sleep 10
        
        # Check if container is running
        if docker ps | grep test-container; then
          echo "✅ Container started successfully"
        else
          echo "❌ Container failed to start"
          docker logs test-container
          exit 1
        fi
        
        # Cleanup
        docker stop test-container
        docker rm test-container

  comment-pr:
    needs: [quality-check, docker-build-test]
    runs-on: ubuntu-latest
    if: always()
    
    permissions:
      pull-requests: write
    
    steps:
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const qualityCheck = '${{ needs.quality-check.result }}';
          const dockerTest = '${{ needs.docker-build-test.result }}';
          
          let message = '## 🔍 PR Quality Check Results\n\n';
          
          message += `- **Code Quality & Build**: ${qualityCheck === 'success' ? '✅ Passed' : '❌ Failed'}\n`;
          message += `- **Docker Build Test**: ${dockerTest === 'success' ? '✅ Passed' : '❌ Failed'}\n\n`;
          
          if (qualityCheck === 'success' && dockerTest === 'success') {
            message += '🎉 All checks passed! This PR is ready for review and merge.\n\n';
            message += '**Next Steps:**\n';
            message += '- Once merged to `main`, the deployment workflow will automatically:\n';
            message += '  - Build and push the Docker image to GitHub Container Registry\n';
            message += '  - Deploy the latest version to Kubernetes\n';
            message += '  - Verify the deployment status\n';
          } else {
            message += '⚠️ Some checks failed. Please review the workflow logs and fix any issues before merging.\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
